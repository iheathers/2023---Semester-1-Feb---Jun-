#!/usr/bin/env bash

# AUTHOR: PRITAM SUWAL SHRESTHA (23771397)

PS4=$'\e[1;32m+${BASH_SOURCE}:${LINENO}: \e[0m'

if [[ $# -ne 2 ]]; then
    echo "Usage: $0 <tsv_file> <command>" >/dev/stderr
    exit 1
fi

tsv_file=$1
sec_arg=$2

echo Second arg: $sec_arg

if [[ ! -s $tsv_file ]]; then
    echo "Error: The file $tsv_file does not exist for is empty" >/dev/stderr
    exit 1
fi

# % cyber_breaches Cyber_Security_Breaches.tsv 2010
# State with greatest number of incidents for 2010 is in TX with count 18

# % cyber_breaches Cyber_Security_Breaches.tsv TX
# Year with greatest number of incidents for TX is in 2010 with count 18

# % cyber_breaches Cyber_Security_Breaches.tsv maxnear
# The max commands are either maxstate or maxyear

# if [[ $arg == "maxstate" ]]; then
#     echo "MAXSTATE"
#     exit 0
# elif [[ $arg == "maxyear" ]]; then
#     echo "MAXYEAR"
#     exit 0
# elif [[ $arg =~ $year_regex ]]; then
#     echo $arg
#     exit 0
# elif [[ $arg =~ $state_regex ]]; then
#     echo $arg
#     exit 0
# elif [[ $arg =~ $max_regex ]]; then
#     echo "The max commands are either maxstate or maxyear"
#     exit 1
# else
#     echo "Invalid arg"
#     exit 1
# fi

year_regex='^[0-9]{4}$'
state_regex='^[A-Z]{2}$'
max_regex='^max.*'

case $sec_arg in
maxstate)
    output=$(tail -n +2 $tsv_file | cut -d $'\t' -f 2 | sort | uniq -c | sort -k 1 -r -n | head -n 1)
    state=$(echo $output | cut -d ' ' -f 2)
    count=$(echo $output | cut -d ' ' -f 1)
    echo State with greatest number of incidents is: ${state} with count ${count}
    exit 0
    ;;
maxyear)
    output=$(tail -n +2 $tsv_file | cut -d $'\t' -f 8 | sort | uniq -c | sort -k 1 -r -n | head -n 1)
    year=$(echo $output | cut -d ' ' -f 2)
    count=$(echo $output | cut -d ' ' -f 1)
    echo Year with greatest number of incidents is: ${year} with count ${count}
    exit 0
    ;;
$year_regex)
    echo $sec_arg
    exit 0
    ;;
[A-Z][A-Z])
    echo $sec_arg

    exit 0
    ;;
$max_regex)
    echo "The max commands are either maxstate or maxyear"
    exit 1
    ;;
*)
    echo "Invalid arg"
    exit 1
    ;;
esac
